C51 COMPILER V9.60.0.0   SHOW                                                              12/21/2020 23:33:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SHOW
OBJECT MODULE PLACED IN .\Objects\show.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE show.c OPTIMIZE(8,SPEED) BROWSE INCDIR(D:\Program Fi
                    -les (x86)\Keil_v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\show.lst) TABS(2) OBJECT(.\Objects\show.obj)

line level    source

   1          #include "reg52.h"
   2          #include "show.h"
   3          #include "clock.h"
   4          
   5          ClockSegBuf clockseg_buf;
   6          
   7          #define LED P0
   8          #define SEG P0
   9          #define POS P2
  10          
  11          typedef unsigned int u16;   //对数据类型进行声明定义
  12          typedef unsigned char u8;
  13          
  14          sbit DULA=P2^6;
  15          sbit WELA=P2^7;
  16          sbit BEEP=P3^6;
  17          sbit LED0=P0^0;
  18          
  19          void delay(unsigned int i){//当i=1时，延时1us
  20   1        while(i--);
  21   1      }
  22          
  23          void delayms(unsigned char i){//当i=1时，延时1ms
  24   1        while(i--)
  25   1          delay(1000);
  26   1      }
  27          
  28          u8 code smgduan[17]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  29                    0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};//显示0~F的值
  30          
  31          void ChangeIntoSegBuf(Clock* clock)
  32          {
  33   1        char num[6];
  34   1        num[0]=clock->sec%10;
  35   1        num[1]=clock->sec/10;
  36   1        num[2]=clock->min%10;
  37   1        num[3]=clock->min/10;
  38   1        num[4]=clock->hour%10;
  39   1        num[5]=clock->hour/10;
  40   1      
  41   1        clockseg_buf.seg[0]=smgduan[num[0]];
  42   1        clockseg_buf.seg[1]=smgduan[num[1]];
  43   1        clockseg_buf.seg[2]=smgduan[num[2]];
  44   1        clockseg_buf.seg[3]=smgduan[num[3]];
  45   1        clockseg_buf.seg[4]=smgduan[num[4]];
  46   1        clockseg_buf.seg[5]=smgduan[num[5]];
  47   1      }
  48          void ClockSegBufInit(){
  49   1        DULA=0;
  50   1        WELA=1;
  51   1        clockseg_buf.seg[0]=smgduan[0];
  52   1        clockseg_buf.seg[1]=smgduan[0];
  53   1        clockseg_buf.seg[2]=smgduan[0];
  54   1        clockseg_buf.seg[3]=smgduan[0];
C51 COMPILER V9.60.0.0   SHOW                                                              12/21/2020 23:33:29 PAGE 2   

  55   1        clockseg_buf.seg[4]=smgduan[0];
  56   1        clockseg_buf.seg[5]=smgduan[0];
  57   1      }
  58          void BeepAction(){
  59   1        BEEP=1;
  60   1        delayms(1000);
  61   1        BEEP=0;
  62   1        delayms(1000);
  63   1        BEEP=1;
  64   1        delayms(1000);
  65   1        BEEP=0;
  66   1        delayms(1000);
  67   1        BEEP=1;
  68   1        delayms(1000);
  69   1        BEEP=0;
  70   1        delayms(1000);
  71   1      }
  72          void LedAction(){
  73   1        LED0=~LED0;
  74   1      }
  75          
  76          void SegAction(){
  77   1        u8 i;
  78   1        u8 temp;
  79   1        for(i=0;i<6;i++)
  80   1        {
  81   2          //POS = 0xFF;
  82   2          switch(i)  //位选，选择点亮的数码管，
  83   2          {
  84   3            case(0):
  85   3              POS=0xFE; break;//显示第0位
  86   3            case(1):
  87   3              POS=0xFD; break;//显示第1位
  88   3            case(2):
  89   3              POS=0xFB; break;//显示第2位
  90   3            case(3):
  91   3              POS=0xF7; break;//显示第3位
  92   3            case(4):
  93   3              POS=0xEF; break;//显示第4位
  94   3            case(5):
  95   3              POS=0xDF; break;//显示第5位
  96   3          }
  97   2          if(i==2||i==4) clockseg_buf.seg[i]|=0x80;
  98   2          SEG=clockseg_buf.seg[i];
  99   2          DULA =1;
 100   2          DULA=0;
 101   2          delay(2500); //间隔一段时间扫描 
 102   2        }
 103   1      }
*** WARNING C280 IN LINE 78 OF show.c: 'temp': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    422    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
